<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build Nudj, run static analyser and tests.</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@1.5.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>github</name>
        <refspec></refspec>
        <url>git@github.com:Nudj/nudj-ios.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>github/development</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>true</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>true</clean>
    <wipeOutWorkspace>true</wipeOutWorkspace>
    <pruneBranches>true</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/15 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># local vars
WorkspaceName=&quot;Nudj.xcworkspace&quot;
Configuration=&quot;Debug&quot;
Scheme=&quot;Nudj&quot;
Simulator=NudjiPhone6-&quot;${BUILD_NUMBER}&quot;

# set the desired version of Xcode
export DEVELOPER_DIR=&quot;/Applications/Xcode.app/Contents/Developer&quot;

# clean the iOS Simulator dir
xcrun simctl create &quot;${Simulator}&quot; com.apple.CoreSimulator.SimDeviceType.iPhone-6 com.apple.CoreSimulator.SimRuntime.iOS-9-1

# do a default clean
cd &quot;${WORKSPACE}&quot;
xcodebuild clean

# run the static analyzer on the main code base
/usr/local/bin/checker-current/scan-build -k -v -v --keep-empty --use-analyzer Xcode -o ./clangScanBuildReports xcodebuild -workspace &quot;${WorkspaceName}&quot; -scheme &quot;${Scheme}&quot; -configuration &quot;${Configuration}&quot; -destination name=${Simulator} ONLY_ACTIVE_ARCH=NO clean build

# delete our custom intermediates directory
rm -rf &quot;${WORKSPACE}&quot;/tmp/objs

# kill the iOS Simulator
xcrun simctl shutdown NudjiPhone6-&quot;${BUILD_NUMBER}&quot; || true
xcrun simctl erase NudjiPhone6-&quot;${BUILD_NUMBER}&quot; || true

# build the test target using our custom intermediates directory
# and pipe the output to ocunit2junit
xcodebuild -workspace &quot;${WorkspaceName}&quot; -scheme &quot;${Scheme}&quot; -configuration &quot;${Configuration}&quot; -sdk iphonesimulator -enableCodeCoverage YES -destination name=${Simulator} ONLY_ACTIVE_ARCH=NO GCC_TREAT_WARNINGS_AS_ERRORS=NO clean build test 2&gt;&amp;1 | /usr/local/bin/ocunit2junit || true

# kill the iOS Simulator
xcrun simctl shutdown NudjiPhone6-&quot;${BUILD_NUMBER}&quot; || true
xcrun simctl erase NudjiPhone6-&quot;${BUILD_NUMBER}&quot; || true
xcrun simctl delete NudjiPhone6-&quot;${BUILD_NUMBER}&quot; || true

# generate the coverage report
cd &quot;${WORKSPACE}&quot;
# /usr/local/bin/gcovr --root=. --exclude=&apos;(.*./Developer/SDKs/.*)|(.*Tests\.m)|(NudjTests/.*)|(Externals/.*)|(Pods/.*)|(.*main\.m)&apos; -x &gt; ./coverage.xml</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.warnings.WarningsPublisher plugin="warnings@4.35">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[WARNINGS] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.54">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>true</doNotResolveRelativePaths>
      <parserConfigurations/>
      <consoleParsers>
        <hudson.plugins.warnings.ConsoleParser>
          <parserName>Clang (LLVM based)</parserName>
        </hudson.plugins.warnings.ConsoleParser>
      </consoleParsers>
    </hudson.plugins.warnings.WarningsPublisher>
    <jenkins.plugins.clangscanbuild.publisher.ClangScanBuildPublisher plugin="clang-scanbuild-plugin@1.4">
      <bugThreshold>0</bugThreshold>
      <markBuildUnstableWhenThresholdIsExceeded>true</markBuildUnstableWhenThresholdIsExceeded>
    </jenkins.plugins.clangscanbuild.publisher.ClangScanBuildPublisher>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.9.2">
      <coberturaReportFile>coverage.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <failUnhealthy>false</failUnhealthy>
      <failUnstable>false</failUnstable>
      <autoUpdateHealth>false</autoUpdateHealth>
      <autoUpdateStability>false</autoUpdateStability>
      <zoomCoverageChart>false</zoomCoverageChart>
      <maxNumberOfBuilds>0</maxNumberOfBuilds>
      <failNoReports>false</failNoReports>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>1000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>1000</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>UTF_8</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>test-reports/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.5">
      <recipients>richardb@sailmaker.co.uk</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>true</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.locksandlatches.LockWrapper plugin="locks-and-latches@0.6">
      <locks>
        <hudson.plugins.locksandlatches.LockWrapper_-LockWaitConfig>
          <name>iOS-sim</name>
        </hudson.plugins.locksandlatches.LockWrapper_-LockWaitConfig>
      </locks>
    </hudson.plugins.locksandlatches.LockWrapper>
  </buildWrappers>
</project>