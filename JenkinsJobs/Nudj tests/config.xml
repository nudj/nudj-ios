<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build Nudj, run static analyser and tests.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>14</daysToKeep>
        <numToKeep>50</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.12">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>github</name>
        <url>git@github.com:Nudj/nudj-ios.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>github/development</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.PerBuildTag/>
      <hudson.plugins.git.extensions.impl.SubmoduleOption>
        <disableSubmodules>false</disableSubmodules>
        <recursiveSubmodules>true</recursiveSubmodules>
        <trackingSubmodules>false</trackingSubmodules>
      </hudson.plugins.git.extensions.impl.SubmoduleOption>
      <hudson.plugins.git.extensions.impl.PruneStaleBranch/>
      <hudson.plugins.git.extensions.impl.CleanCheckout/>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/15 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># local vars
WorkspaceName=&quot;Nudj.xcworkspace&quot;
Configuration=&quot;Debug&quot;
Scheme=&quot;Nudj beta&quot;
Simulator=Nudj-iPhone6-&quot;${BUILD_NUMBER}&quot;
BuildDir=&quot;${WORKSPACE}&quot;/tmp/objs

# configure Ruby gems to be on the path
export GEM_HOME=&quot;${HOME}&quot;/.gem
export PATH=$PATH:&quot;${GEM_HOME}&quot;/bin/

# set the desired version of Xcode
export DEVELOPER_DIR=&quot;/Applications/Xcode.app/Contents/Developer&quot;

# clean the iOS Simulator dir
xcrun simctl create &quot;${Simulator}&quot; com.apple.CoreSimulator.SimDeviceType.iPhone-6 com.apple.CoreSimulator.SimRuntime.iOS-9-2
SimulatorSpec=&quot;platform=iOS Simulator,OS=9.2,name=${Simulator}&quot;

# do a default clean
cd &quot;${WORKSPACE}&quot;
xcodebuild clean

# run the static analyzer on the main code base
/usr/local/bin/checker-current/scan-build -k -v -v --keep-empty \
    --use-analyzer Xcode -o ./clangScanBuildReports \
    xcodebuild -workspace &quot;${WorkspaceName}&quot; \
    -scheme &quot;${Scheme}&quot; -configuration &quot;${Configuration}&quot; \
    -destination &quot;${SimulatorSpec}&quot; ONLY_ACTIVE_ARCH=NO \
    clean build

# delete our custom intermediates directory
rm -rf &quot;${BuildDir}&quot;

# kill the iOS Simulator
xcrun simctl shutdown &quot;${Simulator}&quot; || true
xcrun simctl erase &quot;${Simulator}&quot; || true

# build the test target using our custom intermediates directory
# and pipe the output to ocunit2junit
xcodebuild -workspace &quot;${WorkspaceName}&quot; -scheme &quot;${Scheme}&quot; \
    -configuration &quot;${Configuration}&quot; -sdk iphonesimulator \
    -enableCodeCoverage YES -destination &quot;${SimulatorSpec}&quot; \
    ONLY_ACTIVE_ARCH=YES VALID_ARCHS=x86_64 \
    GCC_TREAT_WARNINGS_AS_ERRORS=NO \
    -derivedDataPath &quot;${BuildDir}&quot; \
    clean build test \
    2&gt;&amp;1 | /usr/local/bin/ocunit2junit || true

# generate the coverage report
cd &quot;${WORKSPACE}&quot;
slather coverage --jenkins --build-directory &quot;${BuildDir}&quot;

# kill the iOS Simulator
xcrun simctl shutdown &quot;${Simulator}&quot; || true
xcrun simctl erase &quot;${Simulator}&quot; || true
xcrun simctl delete &quot;${Simulator}&quot; || true
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.warnings.WarningsPublisher plugin="warnings@4.48">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[WARNINGS] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <usePreviousBuildAsReference>false</usePreviousBuildAsReference>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.72">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>true</doNotResolveRelativePaths>
      <parserConfigurations/>
      <consoleParsers>
        <hudson.plugins.warnings.ConsoleParser>
          <parserName>Clang (LLVM based)</parserName>
        </hudson.plugins.warnings.ConsoleParser>
      </consoleParsers>
    </hudson.plugins.warnings.WarningsPublisher>
    <jenkins.plugins.clangscanbuild.publisher.ClangScanBuildPublisher plugin="clang-scanbuild-plugin@1.4">
      <bugThreshold>0</bugThreshold>
      <markBuildUnstableWhenThresholdIsExceeded>true</markBuildUnstableWhenThresholdIsExceeded>
    </jenkins.plugins.clangscanbuild.publisher.ClangScanBuildPublisher>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.9.7">
      <coberturaReportFile>coverage/cobertura.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <failUnhealthy>false</failUnhealthy>
      <failUnstable>false</failUnstable>
      <autoUpdateHealth>false</autoUpdateHealth>
      <autoUpdateStability>false</autoUpdateStability>
      <zoomCoverageChart>false</zoomCoverageChart>
      <maxNumberOfBuilds>0</maxNumberOfBuilds>
      <failNoReports>false</failNoReports>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>1000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>1000</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>UTF_8</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.2-beta-4">
      <testResults>test-reports/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
      <healthScaleFactor>1.0</healthScaleFactor>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.11">
      <recipients>richardb@sailmaker.co.uk</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>true</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>